{"ast":null,"code":"var _jsxFileName = \"/Users/beckhaywood/dev/repos/lol101-few/src/components/organisms/DisplayChampion/index.js\";\nimport React, { useState, useEffect, Fragment } from 'react';\n\nconst axios = require(\"axios\"); // import { Link } from 'react-router-dom'\n//Call data.keys() on https://ddragon.leagueoflegends.com/cdn/6.24.1/data/en_US/champion.json to grab list of champions.\n\n\nfunction DisplayChampion() {\n  const [champions1, setChampions1] = useState([]);\n  useEffect(() => {\n    async function postrequest() {\n      const champion = \"Tryndamere\";\n      console.log(\"here\");\n      const data = await axios({\n        url: 'http://localhost:5000/graphql',\n        method: 'post',\n        data: {\n          query: `\n                    query Champion {\n                        champion(name: \"${champion}\") {\n                            id\n                            name\n                            title\n                            image {\n                                full\n                            }\n                            skins {\n                                name\n                                num\n                            }\n                            allytips\n                            enemytips\n                            tags\n                            lore\n                            info {\n                                difficulty\n                            }\n                            spells {\n                                name\n                                description\n                                tooltip\n                                cooldownBurn\n                            }\n                            passive {\n                                name\n                                description\n                                image {\n                                    full\n                                }\n                            }\n                            recommended {\n                                title\n                                blocks {\n                                    type\n                                    showIfSummonerSpell\n                                    items {\n                                    id\n                                    count\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    `\n        }\n      });\n      console.log(\"here\");\n      console.log(data.data.data.champion);\n      const {\n        name,\n        image,\n        title,\n        info,\n        lore,\n        allytips,\n        enemytips,\n        tags\n      } = data.data.data.champion;\n      const champion_JSX = /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, name), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, \"Title: \", title), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, \"Difficulty: \", info.difficulty), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, \"Icon: \", /*#__PURE__*/React.createElement(\"img\", {\n        src: `http://ddragon.leagueoflegends.com/cdn/10.21.1/img/champion/${image.full}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, \"Lore: \", lore), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, \"Tags: \", tags.map(tag)));\n      setChampions1(champion_JSX);\n    }\n\n    postrequest();\n  });\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, champions1);\n}\n\nexport default DisplayChampion;","map":{"version":3,"sources":["/Users/beckhaywood/dev/repos/lol101-few/src/components/organisms/DisplayChampion/index.js"],"names":["React","useState","useEffect","Fragment","axios","require","DisplayChampion","champions1","setChampions1","postrequest","champion","console","log","data","url","method","query","name","image","title","info","lore","allytips","enemytips","tags","champion_JSX","difficulty","full","map","tag"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CAEA;AACA;;;AACA,SAASC,eAAT,GAA2B;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACAC,EAAAA,SAAS,CAAE,MAAM;AACb,mBAAeO,WAAf,GAA6B;AACzB,YAAMC,QAAQ,GAAG,YAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEA,YAAMC,IAAI,GAAG,MAAMT,KAAK,CAAC;AACrBU,QAAAA,GAAG,EAAE,+BADgB;AAErBC,QAAAA,MAAM,EAAE,MAFa;AAGrBF,QAAAA,IAAI,EAAE;AACFG,UAAAA,KAAK,EAAG;;0CAEcN,QAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAH7B;AAHe,OAAD,CAAxB;AAqDAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeH,QAA3B;AACA,YAAM;AAACO,QAAAA,IAAD;AAAOC,QAAAA,KAAP;AAAcC,QAAAA,KAAd;AAAqBC,QAAAA,IAArB;AAA2BC,QAAAA,IAA3B;AAAiCC,QAAAA,QAAjC;AAA2CC,QAAAA,SAA3C;AAAsDC,QAAAA;AAAtD,UAA8DX,IAAI,CAACA,IAAL,CAAUA,IAAV,CAAeH,QAAnF;AACA,YAAMe,YAAY,gBACd,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKR,IAAL,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAYE,KAAZ,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAiBC,IAAI,CAACM,UAAtB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAU;AAAK,QAAA,GAAG,EAAG,+DAA8DR,KAAK,CAACS,IAAK,EAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAWN,IAAX,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAWG,IAAI,CAACI,GAAL,CAAUC,GAAV,CAAX,CANJ,CADJ;AAaArB,MAAAA,aAAa,CAACiB,YAAD,CAAb;AACH;;AACDhB,IAAAA,WAAW;AACd,GA7EQ,CAAT;AA+EA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,UADL,CADJ;AAKH;;AACD,eAAeD,eAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react'\nconst axios = require(\"axios\")\n\n// import { Link } from 'react-router-dom'\n//Call data.keys() on https://ddragon.leagueoflegends.com/cdn/6.24.1/data/en_US/champion.json to grab list of champions.\nfunction DisplayChampion() {\n    const [champions1, setChampions1] = useState([])\n    useEffect( () => {\n        async function postrequest() {\n            const champion = \"Tryndamere\"\n            console.log(\"here\")\n\n            const data = await axios({\n                url: 'http://localhost:5000/graphql',\n                method: 'post',\n                data: {\n                    query: `\n                    query Champion {\n                        champion(name: \"${champion}\") {\n                            id\n                            name\n                            title\n                            image {\n                                full\n                            }\n                            skins {\n                                name\n                                num\n                            }\n                            allytips\n                            enemytips\n                            tags\n                            lore\n                            info {\n                                difficulty\n                            }\n                            spells {\n                                name\n                                description\n                                tooltip\n                                cooldownBurn\n                            }\n                            passive {\n                                name\n                                description\n                                image {\n                                    full\n                                }\n                            }\n                            recommended {\n                                title\n                                blocks {\n                                    type\n                                    showIfSummonerSpell\n                                    items {\n                                    id\n                                    count\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    `\n                }\n            })\n            console.log(\"here\")\n            console.log(data.data.data.champion)\n            const {name, image, title, info, lore, allytips, enemytips, tags} = data.data.data.champion\n            const champion_JSX = (\n                <Fragment>\n                    <h1>{name}</h1>\n                    <h1>Title: {title}</h1>\n                    <h1>Difficulty: {info.difficulty}</h1>\n                    <h1>Icon: <img src={`http://ddragon.leagueoflegends.com/cdn/10.21.1/img/champion/${image.full}`}/></h1>\n                    <h1>Lore: {lore}</h1>\n                    <h1>Tags: {tags.map((tag))}</h1>\n\n\n\n                </Fragment>\n            )\n            setChampions1(champion_JSX)\n        }\n        postrequest()\n    }) \n    \n    return (\n        <Fragment>\n            {champions1}\n        </Fragment>\n    )\n}\nexport default DisplayChampion"]},"metadata":{},"sourceType":"module"}