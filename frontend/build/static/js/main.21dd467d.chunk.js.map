{"version":3,"sources":["static/images/logo1.png","static/images/ahri.png","components/Navbar/index.js","components/HomeLogo/index.js","components/ChampionList/championItem.js","components/ChampionList/index.js","components/DisplayChampions/index.js","pages/Home.js","components/DisplayRotations/index.js","pages/ChampionRotation.js","components/DisplayChampion/index.js","pages/Champion.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","id","to","HomeLogo","src","logo","alt","ahri","ChampionItem","name","image","key","href","class","full","ChampionList","champions","map","champion","axios","require","DisplayChampions","useState","search","setSearch","allChampions","setAllChampions","filteredChampions","setFilteredChampions","loadingState","setLoadingState","updateSearch","e","searchTerm","target","value","substr","console","log","filter","toLowerCase","includes","index","useEffect","grabIds","a","url","process","method","data","query","champIds","p","champ","all","values","postrequest","onSubmit","preventDefault","type","onInput","placeholder","displayAfterLoad","Home","DisplayRotations","rotation","setRotation","rotations","champion_JSX","splashArt","ChampionRotation","DisplayChampion","setChampion","id1","useParams","title","info","lore","allytips","enemytips","tags","skins","passive","spells","spell","description","cooldownBurn","difficulty","tag","tip","num","Champion","App","path","exact","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.21dd467d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.882cf7c6.png\";","module.exports = __webpack_public_path__ + \"static/media/ahri.967eefbe.png\";","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport '../../static/css/Navbar.css'\n\nexport default function Navbar() {\n    return (\n        <header>\n            <div className=\"logo-container\">\n                <Link id=\"lol1\" to=\"/\">LOL101</Link>\n            </div>\n            <nav>\n                <ul className=\"nav-links\">\n                    <li><Link to=\"/\">About</Link></li>\n                    <li><Link to=\"/\">Resources</Link></li>\n                    <li><Link to=\"/\">Masteries</Link></li>\n                    <li><Link to=\"/rotations\">Champion Rotation</Link></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}","import React from 'react'\nimport logo from '../../static/images/logo1.png'\nimport ahri from '../../static/images/ahri.png'\nimport '../../static/css/HomeLogo.css'\n\nexport default function HomeLogo() {\n    return (\n        <header>\n            <div>\n                <div className=\"frame\"></div>\n                <div className=\"logos-container2\">\n                <div className=\"logo\"><img src={logo} alt=\"Logo\"/></div>\n                    <div className=\"parall\">\n                        <div className=\"squares\">\n                            <square></square>\n                            <square></square>\n                            <square></square>\n                            <square></square>\n                            <square></square>\n                            <square></square>\n                            <square></square>\n                        </div>\n                    </div>\n                    <div className=\"logo2\"><img src={ahri} alt=\"Logo\"/></div>\n                </div>\n            </div>\n        </header>\n    )\n}","import React from 'react'\nimport { BrowserRouter as Link } from \"react-router-dom\";\n\nexport default function ChampionItem({id, name, image}) {\n    return (\n        <div key={id} id=\"1\">\n            <a href={`/champion/${id}`}>\n                <p className=\"champion-name\">{name}</p>\n                <img class=\"champion-image\" src={`http://ddragon.leagueoflegends.com/cdn/11.3.1/img/champion/${image.full}`} alt={name}/>\n            </a>\n        </div>\n    )\n}","import React from \"react\";\nimport ChampionItem from \"./championItem\";\n\nexport default function ChampionList({ champions }) {\n  return (\n    <ul>\n      {champions.map((champion) => {\n        return (\n          <li>\n            <ChampionItem {...champion} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}","import React, { useState, useEffect } from 'react'\nimport ChampionList from '../ChampionList'\nimport 'dotenv/config'\nconst axios = require(\"axios\")\n// 1st Issue, it could randomly error\n// 2nd Issue, need to wait till search STATE is set before activating filter.\n// Fix this, then do the slug Routes then chill.\n// First check office hours, then ask mitchell.\nexport default function DisplayChampions() {\n    const [search, setSearch] = useState('')\n    const [allChampions, setAllChampions] = useState([])\n    const [filteredChampions, setFilteredChampions] = useState(allChampions)\n    const [loadingState, setLoadingState] = useState(\"Loading...\")\n\n    useEffect( () => {\n        async function grabIds() {\n            const data = await axios({\n                url: `${process.env.REACT_APP_PROXY}/graphql`,\n                method: 'post',\n                data: {\n                    query: `\n                    query Champion {\n                        champIds\n                    }\n                    `\n                }\n            })\n            return data.data.data.champIds\n        }\n        async function postrequest() {\n            // console.log(await grabIds())\n            const champions = await grabIds()\n            const p = champions.map((champ) => {\n                return axios({\n                    url: `${process.env.REACT_APP_PROXY}/graphql`,\n                    method: 'post',\n                    data: {\n                        query: `\n                        query Champion {\n                            champion(name: \"${champ}\") {\n                            name\n                            id\n                            image {\n                                full\n                            }\n                            }\n                            }\n                        `\n                    }\n                })\n            })\n            const values = await axios.all(p)\n            // Set all champions here\n            setAllChampions(values.map((champion)=> champion.data.data.champion))\n            setLoadingState(\"Finished!\")\n        }\n        postrequest()\n    }, []) \n    function updateSearch(e) {\n        setLoadingState(\"\")\n        let searchTerm = e.target.value.substr(0,20)\n        setSearch(searchTerm)\n        console.log(search)\n        // const newChampions = values.map((champion)=> champion.data.data.champion) \n        const filter = allChampions.filter((champion) => {\n            return champion.name.toLowerCase().includes(searchTerm.toLowerCase())\n        })\n\n        const filteredChampions = filter.filter((champion, index) => index < 12)\n        setFilteredChampions(filteredChampions) //set filtered champions state\n    }\n    function displayAfterLoad() {\n        if (loadingState === \"Loading...\") {\n            console.log(\"Still loading\")\n        } else if (loadingState === \"Finished!\") {\n            return <ChampionList champions={allChampions}/>\n        } else {\n            return\n        }\n    }\n    return (\n        <div>\n            <form onSubmit={(e)=>{\n                updateSearch(e)\n                e.preventDefault()\n            }}>\n                {/* On input */}\n                <div className=\"searchbar-container\">\n                <input class=\"searchinp\" type=\"text\" value={search} onInput={(e)=>updateSearch(e)} placeholder=\"Search for champions\"/> \n                </div>\n            </form> \n            {/* instead of champions1 its filtered champions */}\n            {loadingState}\n            {displayAfterLoad()}\n            <ChampionList champions={filteredChampions}/>\n                   \n        </div>\n    )\n}","import React from 'react'\nimport Navbar from '../components/Navbar'\nimport HomeLogo from '../components/HomeLogo'\nimport DisplayChampions from '../components/DisplayChampions'\n\nexport default function Home() {\n    return (\n        <div>\n            <Navbar/>\n            <HomeLogo/>\n            <main>\n                <section className=\"home\">\n                    <div className=\"champions\">\n                    <div className=\"rectangle\">\n                    <h3>Choose Your<text> Legend</text></h3>\n                    </div>\n                    <DisplayChampions/>\n                    </div>\n                </section>\n            </main>\n        </div>\n    )\n}","import React, { useState, useEffect, Fragment } from 'react'\nimport '../../static/css/Rotations.css'\nconst axios = require(\"axios\")\n\nexport default function DisplayRotations() {\n    const [rotation, setRotation] = useState([])\n    useEffect( () => {\n        async function postrequest() {\n            const data = await axios({\n                url: `${process.env.REACT_APP_PROXY}/graphql`,\n                method: 'post',\n                data: {\n                    query: `\n                    query Champion {\n                        rotations {\n                            id\n                            name\n                            splashArt\n                        }\n                    }\n                    `\n                }\n            })\n            const rotations = data.data.data.rotations\n            console.log(rotations)\n            const champion_JSX = (\n                <Fragment>\n                    {rotations.map((champ) => {\n                        return (\n                            <div>\n                                <a href={`/champion/${champ.id}`}>\n                                    <h1 class=\"champ-namer\">{champ.name}</h1>\n                                    <img class=\"imager\" src={champ.splashArt}/>\n                                </a>\n                           </div>\n                        )\n                    })}\n                </Fragment>\n            )\n            setRotation(champion_JSX)\n        }\n        postrequest()\n    }, []) \n\n    return (\n        <Fragment>\n            \n            <div class=\"hero-title\">\n               <h2>Current Champion Rotation</h2>\n           </div>\n           <div className=\"border\">\n           <div className=\"champ-grid\">\n               {rotation}\n           </div>\n           </div>\n\n            \n        </Fragment>\n    )\n}","import React from 'react'\nimport Navbar from '../components/Navbar'\nimport DisplayRotations from '../components/DisplayRotations'\n\nexport default function ChampionRotation() {\n    return (\n        <div>\n            <div class=\"nav-rota\">\n            <Navbar/>\n            </div>\n            <div className=\"rotation\">\n            <DisplayRotations/>\n            </div>\n        </div>    \n    )\n}","import React, { useState, useEffect, Fragment } from 'react'\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport '../../static/css/Champions.css'\nimport 'dotenv/config'\n\nimport {\n    BrowserRouter as Router,\n    useParams\n  } from \"react-router-dom\";\nconst axios = require(\"axios\")\n\n\nfunction DisplayChampion() {\n    const [champion, setChampion] = useState([])\n    const [champID, setChampID] = useState(\"Tryndamere\")\n    let { id1 } = useParams()\n    // setChampID(id)\n    console.log(id1)\n    console.log(\"here\")\n    useEffect( () => {\n        async function postrequest() {\n            const champion = \"Tryndamere\"\n            console.log(\"Made it here\")\n            const data = await axios({\n                url: `${process.env.REACT_APP_PROXY}/graphql`,\n                method: 'post',\n                data: {\n                    query: `\n                    query Champion {\n                        champion(name: \"${id1}\") {\n                            id\n                            name\n                            title\n                            image {\n                                full\n                            }\n                            skins {\n                                name\n                                num\n                            }\n                            allytips\n                            enemytips\n                            tags\n                            lore\n                            info {\n                                difficulty\n                            }\n                            spells {\n                                name\n                                description\n                                tooltip\n                                cooldownBurn\n                                image {\n                                    full\n                                  }\n                            }\n                            passive {\n                                name\n                                description\n                                image {\n                                    full\n                                }\n                            }\n                            recommended {\n                                title\n                                blocks {\n                                    type\n                                    showIfSummonerSpell\n                                    items {\n                                    id\n                                    count\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    `\n                }\n            })\n  \n            console.log(data)\n          \n            // console.log(data.data.data.champion)\n            const {id, name, image, title, info, lore, allytips, enemytips, tags, skins, passive, spells} = data.data.data.champion\n\n            const champion_JSX = (\n                <Fragment>\n                <div className=\"container2\">\n                  <div className=\"champion-title\">\n                        <h1>{name}</h1>\n                  </div>\n                  </div>\n\n                    <div className=\"container3\">\n                    <div className=\"section-container\">\n                    <div className=\"ability-container\">\n                    <div className=\"abilities\">\n                    \n                        {spells.map((spell) => {\n                        return (\n                            <div>\n                                <div className=\"tooltip\">\n                                <img src={`http://ddragon.leagueoflegends.com/cdn/11.3.1/img/spell/${spell.image.full}`}/>\n                                <div className=\"top\">\n                                <h1>{spell.name}</h1>\n                                <p>{spell.description}</p>\n                                <p>{spell.cooldownBurn}</p>\n                                </div>\n                                <i></i>\n                            </div>\n                            </div>\n                        )\n                    })}\n                            <div className=\"tooltip\">\n                            <img src={`http://ddragon.leagueoflegends.com/cdn/11.3.1/img/passive/${passive.image.full}`} />\n                            <div className=\"top\">\n                                <h1>{passive.name}</h1>\n                                <p>{passive.description}</p>\n                                \n                                </div>\n                                </div> \n                    </div>\n                    </div>\n                \n                    <div className=\"a-b-container\">\n                    <Tabs>\n                        <TabList>\n                            <Tab>Info</Tab>\n                            <Tab>Lore</Tab>\n                            <Tab>Items</Tab>\n                        </TabList>\n                        <TabPanel>\n                            <h3>Difficulty: {info.difficulty}</h3>\n                            {tags.map((tag) => {\n                                return (\n                                    <h4>Class: {tag}</h4>\n                                )\n                            })}\n                            <span id=\"id\">\n                            <h3><strong>Playing As:</strong></h3> {allytips.map((tip) => {\n                                return <p>{tip}</p>\n                            })}\n                            <h3><strong>Playing Against:</strong></h3> {enemytips.map((tip) => {\n                                return <p>{tip}</p>\n                            })}\n                            </span>\n                        </TabPanel>\n                        <TabPanel>\n                            <h3>{lore}</h3>\n                        </TabPanel>\n                        <TabPanel>\n                            <h2>Placeholder</h2>\n                        </TabPanel>\n                    </Tabs>\n                    </div>\n                    \n                      <div className=\"splash-art\"> \n                            <div className=\"splash\">\n                            <img src={`http://ddragon.leagueoflegends.com/cdn/img/champion/splash/${id}_${skins[0].num}.jpg`} alt={name}/>\n                            <div className=\"name-tag\">\n                        <h1>{title}</h1>\n                        </div>\n                            </div>\n                            </div>\n                            </div>\n                            </div>\n            \n                   \n                    {/* <Tabs>\n                        <TabList>\n                        <Tab>Info</Tab>\n                        <Tab>Lore</Tab>\n                        </TabList>\n                    \n                        <TabPanel>\n                        <h2>Difficulty: {info.difficulty}</h2>\n\n                        <h1>Ally Tips: {allytips.map((tip) => {\n                        return <p>{tip}</p>\n                        })}</h1>\n\n                        <h1>Enemy Tips: {enemytips.map((tip) => {\n                        return <p>{tip}</p>\n                        })}</h1>\n\n                        </TabPanel>\n                        <TabPanel>\n                        <h2>{lore}</h2>\n                        </TabPanel>\n                    </Tabs> */}\n                   \n                   \n    </Fragment>\n            )\n            setChampion(champion_JSX)\n        }\n        postrequest()\n    }, []) \n    \n\n    return (\n        <Fragment>\n            {champion}\n        </Fragment>\n    )\n}\nexport default DisplayChampion\n","import React from 'react'\nimport Navbar from '../components/Navbar'\nimport DisplayChampion from '../components/DisplayChampion'\n\nexport default function Champion() {\n    return (\n        <div>\n            <Navbar/>\n            <div className=\"championinf\">\n                <DisplayChampion/>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Home from './pages/Home'\nimport ChampionRotation from './pages/ChampionRotation'\nimport Champion from './pages/Champion'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <div className=\"App\">\n          <Route path=\"/rotations\" exact render={ () => <ChampionRotation/>} />\n          <Route path=\"/\" exact render={ () => <Home/>}>\n          </Route>\n          <Route path=\"/champion/:id1\" exact render={ () => <Champion/>}></Route>\n        </div>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}